setwd('C:\\Users\\bcorwin\\Kaggle\\Titanic')
train <- read.csv('.\Raw Data\train.csv')
train <- read.csv('~\\Raw Data\\train.csv')
train <- read.csv('\\Raw Data\\train.csv')
train <- read.csv('.\\Raw Data\\train.csv')
View(train)
View(train)
attach(train)
table(Survived,Pclass)
prop.table(table(Survived,Pclass))
prop.table(table(Survived,Pclass),1)
prop.table(table(Survived,Sex),1)
hist(Age[Survived == 1], col='blue', xlim=c(0, 1))
hist(Age[Survived == 0], col='red', add=T)
Age[Survived == 1]
Age[Survived == 0]
hist(Age, col='blue', xlim=c(0, 1))
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 0], col='red', add=T)
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 0], col='red', add=T)
hist(Age[Survived == 0], col='red')
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 0], col='red', add = T)
hist(Age[Survived == 1], col='blue', lwd = 2)
hist(Age[Survived == 0], col='red', add = T, lwd = 1)
hist(Age[Survived == 1], col='blue', lwd = 2)
hist(Age[Survived == 0], col='red', add = T, lwd = 1)
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 0], col='red', add = T)
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 0], col='red')
curve(Age[Survived == 1], col='blue')
curve(dnorm(x, mean = mean(Age[Survived == 1]), sd = sqrt(var(Age[Survived == 1])),
col='blue')
curve(dnorm(x, mean = mean(Age[Survived == 1]), sd = sqrt(var(Age[Survived == 1]))),
col='blue')
curve(dnorm(x, mean = mean(Age[Survived == 1]), sd = sqrt(var(Age[Survived == 1]))),
col='blue')
curve(dnorm(x, mean = mean(Age[Survived == 1]), sd = sqrt(var(Age[Survived == 1]))),
col='blue', ylim = (0,2))
curve(dnorm(x, mean = mean(Age[Survived == 1]), sd = sqrt(var(Age[Survived == 1]))),
col='blue', ylim = c(0,2))
hist(Age[Survived == 1], col='blue')
hist(Age[Survived == 0], col='red')
ggplot(rbind(Survived, Age), aes(Age, fill = Survived)) + geom_density(alpha = 0.2)
library(ggplot)
ggplot(rbind(Survived, Age), aes(Age, fill = Survived)) + geom_density(alpha = 0.2)
library(ggplot2)
ggplot(rbind(Survived, Age), aes(Age, fill = Survived)) + geom_density(alpha = 0.2)
rbind(Survived, Age)
ggplot(cbind(Survived, Age), aes(Age, fill = Survived)) + geom_density(alpha = 0.2)
cbind(Survived, Age)
ggplot(train, aes(Age, fill = Survived)) + geom_density(alpha = 0.2)
ggplot(train, aes(Age, fill = Survived))
ggplot(train, aes(Age, fill = Survived)) + geom_histogram()
ggplot(train, aes(Age, fill = Survived)) + geom_bar()
ggplot(train, aes(x = Age, fill = Survived)) + geom_bar()
ggplot(train, aes(x = Age, fill = Survived)) + geom_bar(posistion = "fill")
ggplot(train, aes(x = Age, fill = Survived)) + geom_bar(posistion = "fill", binwidth = x)
ggplot(train, aes(x = Age, fill = Survived)) + geom_bar(posistion = "fill", binwidth = Age)
ggplot(train, aes(Age, colour = Survived)) + geom_density()
ggplot(train[!is.na(Age),], aes(Age, colour = Survived)) + geom_density()
ggplot(train[!is.na(Age) & !is.na(Survived),], aes(Age, colour = Survived)) + geom_density()
ggplot(train, aes(Age, colour = Survived)) + geom_density()
ggplot(train, aes(Age, colour = as.Factor(Survived)) + geom_density()
)
ggplot(train, aes(Age, colour = as.Factor(Survived))) + geom_density()
ggplot(train, aes(Age, colour = as.factor(Survived))) + geom_density()
Survived <- as.factor(Survived)
train$Survived <- as.factor(Survived)
prop.table(table(Survived,Pclass),1)
prop.table(table(Survived,Sex),1)
ggplot(train, aes(Age, colour = Survived)) + geom_density()
#Get needed libraries
library(ggplot2)
#Read in the training data
setwd('C:\\Users\\bcorwin\\Kaggle\\Titanic')
train <- read.csv('.\\Raw Data\\train.csv')
attach(train)
train$Survived <- as.factor(Survived)
#Look at each variable
prop.table(table(Survived,Pclass),1)
prop.table(table(Survived,Sex),1)
ggplot(train, aes(Age, colour = Survived)) + geom_density()
prop.table(table(Survived,SibSp),1)
#Get needed libraries
library(ggplot2)
#Read in the training data
setwd('C:\\Users\\bcorwin\\Kaggle\\Titanic')
train <- read.csv('.\\Raw Data\\train.csv')
attach(train)
train$Survived <- as.factor(Survived)
#Look at each variable
prop.table(table(Survived,Pclass),2)
prop.table(table(Survived,Sex),2)
ggplot(train, aes(Age, colour = Survived)) + geom_density()
##Bump at around 10 years, split here for young/old
prop.table(table(Survived,SibSp),2)
train$ageGrp <- ifelse(Age <= 10, "young", "old")
train$econClass <- ifelse(Pclass == 1, "upper", ifelse(Pclass == 2, "middle", "lower"), NA)
train$econClass <- ifelse(Pclass == 1, "upper", ifelse(Pclass == 2, "middle", "lower"), "")
train$econClass <- ifelse(Pclass == 1, "upper", ifelse(Pclass == 2, "middle", "lower"))
View(train)
View(train)
train$onlyCld <- ifelse(SibSp == 0, "only child", "not only child")
View(train)
View(train)
View(train)
View(train)
prop.table(table(Survived,ParCh),2)
prop.table(table(Survived,Parch),2)
train$onlyParch <- ifelse(Parch == 0, "only parch", "not only parch")
train$alone <- ifelse(SibSp == 0 $ parch ==0, "alone", "not alone")
train$alone <- ifelse(SibSp == 0 & parch ==0, "alone", "not alone")
train$alone <- ifelse(SibSp == 0 & Parch ==0, "alone", "not alone")
View(train)
View(train)
View(train)
View(train)
ggplot(train, aes(Fare, colour = Survived)) + geom_density()
prop.table(table(Survived,Embarked),2)
View(train)
View(train)
View(train)
install.packages("Amelia")
require(Amelia)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
train <- read.csv('.\\Raw Data\\train.csv')
attach(train)
train$Survived <- as.factor(Survived)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE
)
require(ggplot2)
require(Amelia)
#Read in the training data
setwd('C:\\Users\\bcorwin\\Kaggle\\Titanic')
train <- read.csv('.\\Raw Data\\train.csv',
col.classes = c('integer',
'factor',
'factor',
'character',
'factor',
'numeric',
'integer',
'integer',
'character',
'numeric',
'character',
'factor')
)
setwd('C:\\Users\\bcorwin\\Kaggle\\Titanic')
train <- read.csv('.\\Raw Data\\train.csv',
colClasses = c('integer',
'factor',
'factor',
'character',
'factor',
'numeric',
'integer',
'integer',
'character',
'numeric',
'character',
'factor'),
na.strings = c("NA", "")
)
View(train)
View(train)
attach(train)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE, y.labels = NULL)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE, y.labels = "")
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE, y.labels = NULL, y.at = NULL)
mosaicplot(Pclass ~ Survived)
mosaicplot(Pclass ~ Survived, main = "Fate by Travelling Class", shade = FALSE)
mosaicplot(Pclass ~ Survived, main = "Fate by Travelling Class", color = TRUE)
mosaicplot(Pclass ~ Survived, main = "Fate by Travelling Class", color = TRUE, shade = FALSE)
mosaicplot(Sex ~ Survived, main = "Fate by Sex", color = TRUE)
mosaicplot(SibSp ~ Survived, main = "Fate by Sibling/Spouse Count", color = TRUE)
mosaicplot(Parch ~ Survived, main = "Fate by Parent/Child Count", color = TRUE)
mosaicplot(Cabin  ~ Survived, main = "Fate by Cabin", color = TRUE)
mosaicplot(Embarked ~ Survived, main = "Fate by Embarkment", color = TRUE)
boxplot(Age ~ Survived, main = "Fate by Age")
ggplot(train, aes(Age, colour = Survived)) + geom_density()
ggplot(train, aes(Age, colour = Survived)) + geom_bar()
ggplot(train, aes(Age, colour = Survived)) + geom_density()
ggplot(train, aes(Fare, colour = Survived)) + geom_density()
hist(Age)
hist(Age)
train$ageCut <- cut(Age, 16)
View(train)
View(train)
fateByAge <- aggregate(Age, by = list(ageCut), FUN = mean)
fateByAge <- aggregate(Age, by = list(train$ageCut), FUN = mean)
View(fateByAge)
View(fateByAge)
fateByAge <- aggregate(Survived, by = list(train$ageCut), FUN = mean)
warnings()
fateByAge <- aggregate(numeric(Survived), by = list(train$ageCut), FUN = mean)
fateByAge <- aggregate(as.Numeric(Survived), by = list(train$ageCut), FUN = mean)
fateByAge <- aggregate(as.numeric(Survived), by = list(train$ageCut), FUN = mean)
View(fateByAge)
View(fateByAge)
fateByAge <- aggregate(as.numeric(levels(Survived), by = list(train$ageCut), FUN = mean)
fateByAge <- aggregate(as.numeric(levels(Survived)), by = list(train$ageCut), FUN = mean)
fateByAge <- aggregate(as.numeric(levels(Survived)), by = list(train$ageCut), FUN = mean)
fateByAge <- aggregate(as.numeric(as.character(Survived)), by = list(train$ageCut), FUN = mean)
fateByAge <- aggregate(as.numeric(as.character(Survived)), by = list(train$ageCut),
FUN = mean)
View(fateByAge)
View(fateByAge)
View(fateByAge)
View(fateByAge)
barplot(fateByAge$x ~ fateByAge$Group.1)
barplot(fateByAge$x, fateByAge$Group.1)
plot(fateByAge$x ~ fateByAge$Group.1)
ggplot(train, aes(Age, colour = Survived)) + geom_density()
ggplot(train, aes(Fare, colour = Survived)) + geom_density()
ggplot(train, aes(Age, colour = Survived)) + geom_density()
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE, y.labels = NULL, y.at = NULL)
#Get needed libraries
require(ggplot2)
require(Amelia)
#Read in the training data
setwd('C:\\Users\\bcorwin\\Kaggle\\Titanic')
train <- read.csv('.\\Raw Data\\train.csv',
colClasses = c('integer',
'factor',
'factor',
'character',
'factor',
'numeric',
'integer',
'integer',
'character',
'numeric',
'character',
'factor'),
na.strings = c("NA", "")
)
attach(train)
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE, y.labels = NULL, y.at = NULL)
#Look at each variable
mosaicplot(Pclass ~ Survived, main = "Fate by Traveling Class", color = TRUE)
mosaicplot(Sex ~ Survived, main = "Fate by Sex", color = TRUE)
mosaicplot(SibSp ~ Survived, main = "Fate by Sibling/Spouse Count", color = TRUE)
mosaicplot(Parch ~ Survived, main = "Fate by Parent/Child Count", color = TRUE)
mosaicplot(Embarked ~ Survived, main = "Fate by Embarkment", color = TRUE)
ggplot(train, aes(Age, colour = Survived)) + geom_density()
ggplot(train, aes(Fare, colour = Survived)) + geom_density()
#Imputation
##Age
##Embarkment
missmap(train, main="Titanic Training Data - Missings Map",
col=c("yellow", "black"), legend=FALSE, y.labels = NULL, y.at = NULL)
mosaicplot(Pclass ~ Survived, main = "Fate by Traveling Class", color = TRUE)
chk <- strsplit(Name, split = ",")
chk
getTitle <- function(data) {
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", data$Name, TRUE)
title.comma.end <- title.dot.start
+ attr(title.dot.start, "match.length")-1
data$Title <- substr(data$Name, title.dot.start+2, title.comma.end-1)
return (data$Title)
}
train$Title <- getTitle(train)
View(train)
View(train)
title.dot.start <- regexpr("\\,[A-Z ]{1,20}\\.", Name, TRUE)
title.dot.start
title.comma.end <- title.dot.start + attr(title.dot.start, "match.length")-1
train$Title <- substr(Name, title.dot.start+2, title.comma.end-1)
View(train)
View(train)
title.dot.start
require(Hmisc)
bystats(Age, train$Title, fun = function(x)c(Mean=mean(x), Median = median(x)))
install.packages("Hmisc")
require(Hmisc)
bystats(Age, train$Title, fun = function(x)c(Mean=mean(x), Median = median(x)))
options(digits = 1)
bystats(Age, train$Title, fun = function(x)c(Mean=mean(x), Median = median(x)))
options(digits = 2)
bystats(Age, train$Title, fun = function(x)c(Mean=mean(x), Median = median(x)))
ageByTitle <- bystats(Age, train$Title,
fun = function(x)c(Mean=mean(x), Median = median(x)))
ageByTitle
class(ageByTitle)
class(ageByTitle$Mean)
