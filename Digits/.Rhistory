image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = 28*28 - ((row-1)*28 + col)
image[p, 1] = col
image[p, 2] = row
image[p, 3] = pixels[row, col]
}
}
ggplot(image, aes(x,y,colour = val)) + geom_point()
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = row
image[p, 3] = pixels[row, col]
}
}
ggplot(image, aes(x,y,colour = val)) + geom_point()
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = pixels[row, col]
}
}
ggplot(image, aes(x,y,colour = val)) + geom_point()
ggplot(image[val != 0,], aes(x,y,colour = val)) + geom_point()
ggplot(image[image$val != 0,], aes(x,y,colour = val)) + geom_point()
ggplot(image, aes(x,y,colour = val)) + geom_point()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1)
+ geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1))
+ geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1))
+ geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1)) + geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1, colour = val)) + geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1, fill = val, colour = val)) + geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, colour = val)) + geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, colour = val)) + geom_rect() + scale_colour_grey()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, colour = val)) + geom_rect() + scale_colour_grey(start = 0, end = 1)
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, col = rgb(val,val,val))) + geom_rect()
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = pixels[row, col] / 255
}
}
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, col = rgb(val,val,val))) + geom_rect()
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = pixels[row, col] %/% 255
}
}
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, col = rgb(val,val,val))) + geom_rect()
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = pixels[row, col] / 255
}
}
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = as.numeric(pixels[row, col]) / 255
}
}
View(image)
View(image)
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = val, col = rgb(val,val,val))) + geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = rgb(val,val,val))) + geom_rect()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
fill = rgb(val,val,val))) + geom_rect() + scale_color_identity()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val))) + geom_rect() + scale_color_identity()
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val))) + geom_rect() + scale_color_identity()
ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val))) + geom_rect() + scale_color_identity()
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + xlim(1,28) + ylim(1,28)
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + theme(xlab = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + theme(axis.y.text = element_blank(), axis.x.text = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + theme(axis.text.y = element_blank(), axis.text.x = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g <= g + theme(axis.text.y = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g <- g + theme(axis.text.y = element_blank(), axis.text.x = element_blank(), axis.ticks = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank(), main = label)
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(label)
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label = ", label)
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
plotDigit <- function(row) {
label = train[row, 1]
pixels <- matrix(train[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
}
plotDigit(1)
plotDigit(0)
plotDigit(2)
View(image)
View(image)
View(pixels)
View(pixels)
plotDigit <- function(row) {
label = train[row, 1]
pixels <- matrix(train[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g
}
plotDigit(3)
plotDigit(2)
plotDigit(10)
plotDigit(1)
plotDigit(2)
plotDigit(3)
plotDigit(4)
plotDigit(5)
plotDigit(6)
plotDigit(10)
plotDigit(100)
plotDigit <- function(row) {
label = train[row, 1]
pixels <- matrix(train[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
}
plotDigit(100)
plotDigit <- function(row) {
label = train[row, 1]
pixels <- matrix(train[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
#g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
#panel.background = element_blank())
g
}
plotDigit(100)
row = 100
label = train[row, 1]
pixels <- matrix(train[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
View(pixels)
View(pixels)
plotDigit <- function(row) {
label = train[row, 1]
pixels <- matrix(train[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
}
plotDigit(100)
averages <- aggregate(train,label,FUN = mean)
averages <- aggregate(train,train$label,FUN = mean)
averages <- aggregate(train,list("label"),FUN = mean)
averages <- aggregate(train,list(train$label),FUN = mean)
View(averages)
View(averages)
plotDigit <- function(row, data = train) {
label = data[row, 1]
pixels <- matrix(data[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
g
}
plotDigit(100)
plotDigit(12)
plotDigit(1)
plotDigit(1,averages)
plotDigit(2,averages)
plotDigit(3,averages)
plotDigit(4,averages)
plotDigit(5,averages)
plotDigit(6,averages)
plotDigit <- function(row, data = train) {
label = data[row, 1]
pixels <- matrix(data[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed() + ggtitle(paste("Label =", label))
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
return(g)
}
plotDigit(1)
par(3,3)
par(mfrow(3,3))
par(mfrow = c(3,3))
seq(10)
avgs <- aggregate(train,list(train$label),FUN = mean)
par(mfrow = c(3,3))
for(num in seq(10)) {
plotDigit(num, avgs)
}
View(avgs)
View(avgs)
avgs <- aggregate(train,list(train$label),FUN = mean)[,-1]
View(avgs)
View(avgs)
par(mfrow = c(3,3))
for(num in seq(10)) {
plotDigit(num, avgs)
}
num  = 1
plotDigit(num, avgs)
par(mfrow = c(3,3))
for(num in seq(10)) {
p <- plotDigit(num, avgs)
p
}
p
plots <- c(list(...), plotlist)
plots <- list()
plots <- list()
for(num in seq(10)) {
p <- plotDigit(num, avgs)
plots <- cbind(plots,p)
}
plots
multiplot(plots, ncols = 3)
plots <- list()
for(num in seq(10)) {
plots[num] <- plotDigit(num, avgs)
}
multiplot(plotlist = plots, ncols = 3)
install.packages("gridExtra")
require(gridExtra)
plots <- list()
for(num in seq(10)) {
plots[[num]] <- plotDigit(num, avgs)
}
multiplot(plotlist = plots, ncols = 3)
install.packages("gridBase")
require(gridBase)
multiplot(plotlist = plots, ncols = 3)
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(plotlist = plots, ncols = 3)
multiplot(plotlist = plots, ncols = 3, layout = c(3,3))
length(plots)
multiplot(plotlist = plots, cols = 3)
plotDigit <- function(row, data = train) {
label = data[row, 1]
pixels <- matrix(data[row, -1], nrow = 28, ncol = 28, byrow = TRUE)
image = data.frame(x = rep(0,784), y = rep(0,784),
val = rep(0.0,784),
stringsAsFactors = FALSE)
for(col in seq(ncol(pixels))){
for(row in seq(nrow(pixels))) {
p = (row-1)*28 + col
image[p, 1] = col
image[p, 2] = 28-row
image[p, 3] = 1 -(as.numeric(pixels[row, col]) / 255)
}
}
g <- ggplot(image, aes(xmin = x, xmax = x+1, ymin = y, ymax = y+1,
col = rgb(val,val,val),
fill = rgb(val, val, val)))
g <- g + geom_rect() + scale_color_identity() + scale_fill_identity()
g <- g + coord_fixed()
g <- g + theme(axis.text = element_blank(), axis.ticks = element_blank(),
panel.background = element_blank())
return(g)
}
for(num in seq(10)) {
plots[[num]] <- plotDigit(num, avgs)
}
multiplot(plotlist = plots, cols = 2)
multiplot(plotlist = plots, cols = 4)
avgs <- aggregate(train,list(train$label),FUN = median)[,-1]
plots <- list()
for(num in seq(10)) {
plots[[num]] <- plotDigit(num, avgs)
}
multiplot(plotlist = plots, cols = 4)
install.packages("randomForest")
multiplot(plotlist = plots, cols = 5)
